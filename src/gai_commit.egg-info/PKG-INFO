Metadata-Version: 2.4
Name: gai-commit
Version: 0.1.1
Summary: An AI-powered git commit message generator.
Author-email: Muzahid <mmsaddam@gmail.com>
License: MIT License
        
        Copyright (c) 2025 Muzahid
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: Homepage, https://github.com/muzahid59/gai
Project-URL: Bug Tracker, https://github.com/muzahid59/gai/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Topic :: Software Development :: Version Control :: Git
Classifier: Topic :: Utilities
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: requests
Requires-Dist: python-dotenv
Requires-Dist: openai
Dynamic: license-file

# gai-commit

AI-powered generator for high‑quality Conventional Commit messages from your staged diff.

## Quick Start

```bash
pip install gai-commit
# Stage the files you want included (REQUIRED)
git add path/to/file.py            # or: git add .
# Default provider = Ollama (local)
gai
# Specify model (Ollama)
gai llama3.2
# Use OpenAI (needs OPEN_AI_API_KEY)
gai --provider openai
gai --provider openai gpt-4
# One‑line (subject only)
gai --oneline
```

> You must stage changes first; otherwise the tool will have an empty diff.

## What It Does

1. Verifies you are inside a git repository via [`gai.utils.is_git_repository`](src/gai/utils.py).
2. Collects staged changes (`git diff --staged --minimal --unified=5`) and strips noise using [`gai.utils.get_staged_diff`](src/gai/utils.py).
3. Sends the cleaned diff to the selected provider through [`gai.cli.generate_commit_message`](src/gai/cli.py).
4. Cleans AI output (removes hidden <think> blocks) via [`gai.utils.clean_commit_message`](src/gai/utils.py).
5. Interactive loop (Apply / Edit / Re‑generate / Quit) handled by [`gai.cli.handle_user_choice`](src/gai/cli.py).
6. Commits with your approved message.

## Environment Variables

Only one is currently required for OpenAI:
```dotenv
OPEN_AI_API_KEY=sk-your-key
```

## Interactive Flow

After generating a suggestion:

```
Suggested Commit Message:
feat(parser): improve error resilience

- add fallback recovery for malformed input
- reduce panic cases in edge parsing paths
---
[A]pply, [E]dit, [R]-generate, or [Q]uit? (a/e/r/q)
```

Options:
- a: Commit immediately (`git commit -m "<message>"`)
- e: Open `$EDITOR` (defaults to `vim`) to refine
- r: Ask AI again (same diff)
- q: Abort

## One-Line Mode

Use `--oneline` to force a single concise subject line (no body). Logic passes `oneline=True` into provider calls: [`gai.cli.generate_commit_message`](src/gai/cli.py).

## Development

```bash
git clone https://github.com/muzahid59/gai
cd gai
pip install -e .
pytest tests -v
```

## License

MIT - see [LICENSE](LICENSE)
